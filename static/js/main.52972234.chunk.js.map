{"version":3,"sources":["components/Context/index.js","components/Stats.js","components/Stopwatch.js","components/Header.js","components/Counter.js","components/Icon.js","components/Player.js","components/AddPlayerForm.js","components/App.js","index.js"],"names":["ScoreboardContext","React","createContext","Provider","Consumer","Stats","react_default","a","createElement","context","totalPlayers","length","totalPoints","reduce","total","players","score","className","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","_this","now","Date","setState","prevState","handleStopwatch","handleReset","_this2","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","_ref","title","components_Stats","components_Stopwatch","Counter","index","changeScore","Icon","props","viewBox","isHighScore","d","transform","width","height","Player","_this$props","name","id","removePlayer","components_Icon","components_Counter","PureComponent","AddPlayerForm","playerInput","createRef","handleSubmit","e","addPlayer","preventDefault","current","value","currentTarget","reset","onSubmit","type","ref","placeholder","App","prevPlayerId","handleScoreChange","delta","handleAddPlayer","concat","Object","toConsumableArray","handleRemovePlayer","filter","p","getHighScore","scores","map","highScore","max","apply","components_Header","player","components_Player","key","toString","components_AddPlayerForm","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.52972234.chunk.js","sourcesContent":["import React from 'react';\n\nconst ScoreboardContext = React.createContext();\n\nexport const Provider = ScoreboardContext.Provider;\nexport const Consumer = ScoreboardContext.Consumer;\n","import React from 'react';\nimport { Consumer } from './Context';\n\nconst Stats = () => {\n\n  return (\n    <Consumer>\n      { context => {\n        const totalPlayers = context.length;\n        const totalPoints = context.reduce( (total, players) => {\n          return total + players.score;\n        }, 0);\n\n        return (\n          <table className=\"stats\">\n            <tbody>\n              <tr>\n                <td>Players:</td>\n                <td>{ totalPlayers }</td>\n              </tr>\n              <tr>\n                <td>Total Points:</td>\n                <td>{ totalPoints }</td>\n              </tr>\n            </tbody>\n          </table>\n        );\n      }}\n     </Consumer>\n  );\n}\n\nexport default Stats;\n","import React, { Component } from 'react';\n\nclass Stopwatch extends Component {\n\n  state = {\n    isRunning: false,\n    elapsedTime: 0,\n    previousTime: 0\n  }\n\n  componentDidMount(){\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.intervalID);\n  }\n\n  tick = () => {\n    if (this.state.isRunning){\n      const now = Date.now();\n      this.setState( prevState => ({\n        previousTime: now,\n        elapsedTime: prevState.elapsedTime + (now - this.state.previousTime)\n      }));\n    }\n  }\n\n  handleStopwatch = () => {\n    this.setState( prevState => ({\n      isRunning: !prevState.isRunning\n    }));\n    if (!this.state.isRunning) {\n      this.setState({previousTime: Date.now()})\n    }\n  }\n\n  handleReset = () => {\n    this.setState({ elapsedTime: 0});\n  }\n\n  render(){\n    const seconds = Math.floor(this.state.elapsedTime / 1000)\n\n    return(\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <span className=\"stopwatch-time\">{ seconds }</span>\n        <button onClick={this.handleStopwatch}>\n          {this.state.isRunning ? 'Stop' : 'Start'}\n        </button>\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n\n    );\n  }\n}\n\n\n\n\nexport default Stopwatch;\n","import React from 'react';\nimport Stats from './Stats.js';\nimport Stopwatch from './Stopwatch';\n\nconst Header = ({ title }) => {\n  return (\n    <header>\n      <Stats />\n      <h1>{ title }</h1>\n      <Stopwatch />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Counter = ({ index, score, changeScore }) => {\n\n  return (\n    <div className=\"counter\">\n      <button className=\"counter-action decrement\" onClick={() => changeScore(index, -1)}> - </button>\n      <span className=\"counter-score\">{ score }</span>\n      <button className=\"counter-action increment\" onClick={() => changeScore(index, 1)}> + </button>\n    </div>\n  );\n}\n\nexport default Counter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Icon = (props) => {\n\nreturn (\n    <svg viewBox=\"0 0 44 35\" className={ props.isHighScore ? 'is-high-score' : null}>\n      <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\n      <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  isHighScore: PropTypes.bool\n};\n\nexport default Icon;\n","import React, { PureComponent } from 'react';\nimport PropTypes from \"prop-types\"\nimport Counter from './Counter.js';\nimport Icon from './Icon.js';\n\nclass Player extends PureComponent {\n  static propTypes = {\n    name: PropTypes.string,\n    id: PropTypes.number,\n    removePlayer: PropTypes.func,\n    score: PropTypes.number,\n    index: PropTypes.number,\n    changeScore: PropTypes.func,\n    isHighScore: PropTypes.bool\n  }\n\n  render() {\n\n    const {\n      name,\n      id,\n      removePlayer,\n      score,\n      index,\n      changeScore\n    } = this.props;\n\n    return (\n      <div className=\"player\">\n        <span className=\"player-name\">\n          <button className=\"remove-player\" onClick={ () => removePlayer(id) }>âœ–</button>\n          <Icon isHighScore={this.props.isHighScore} />\n          { name }\n        </span>\n        <Counter\n          score={score}\n          index={index}\n          changeScore={changeScore}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React, { Component } from 'react';\n\n\nclass AddPlayerForm extends Component {\n\n  playerInput = React.createRef();\n\n  handleSubmit = (e) => {\n    const {addPlayer} = this.props;\n    e.preventDefault();\n    addPlayer(this.playerInput.current.value);\n    e.currentTarget.reset();\n  }\n\n  render(){\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          ref={this.playerInput}\n          placeholder=\"Enter a player's name\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Add Player\"\n        />\n      </form>\n    );\n  }\n}\n\nexport default AddPlayerForm;\n","import React, { Component } from 'react';\nimport { Provider } from './Context';\nimport Header from './Header.js';\nimport Player from './Player.js';\nimport AddPlayerForm from './AddPlayerForm.js';\n\nclass App extends Component {\n\n  state = {\n    players: [\n      {\n        name: \"Steven\",\n        score: 0,\n        id: 1\n      },\n      {\n        name: \"Ana\",\n        score: 0,\n        id:2\n      },\n      {\n        name: \"Anthony\",\n        score: 0,\n        id: 3\n      },\n      {\n        name: \"Anny\",\n        score: 0,\n        id: 4\n      }\n    ]\n  };\n\n  // player id Counter\n\n    prevPlayerId = 4;\n\n  handleScoreChange = (index, delta) => {\n    this.setState( prevState => ({\n        score: prevState.players[index].score += delta\n    }));\n  }\n\n  handleAddPlayer = (name) => {\n    this.setState( prevState => {\n      return {\n      players: [\n        ...prevState.players,\n        {\n          name,\n          score: 0,\n          id: this.prevPlayerId += 1\n        }\n      ]\n     };\n    });\n  }\n\n  handleRemovePlayer = (id) => {\n    this.setState( prevState => {\n      return {\n        players: prevState.players.filter(p => p.id !== id )\n      }\n    });\n  }\n\n  getHighScore = () => {\n  const scores = this.state.players.map( p => p.score );\n  const highScore = Math.max(...scores);\n  if (highScore) {\n    return highScore;\n    }\n    return null;\n  }\n\n  render(){\n\n    const highScore = this.getHighScore();\n\n    return (\n      <Provider value={this.state.players}>\n        <div className=\"scoreboard\">\n          <Header\n            title=\"Scoreboard\"\n          />\n\n          {/*player list */}\n          {this.state.players.map( (player, index)  =>\n            <Player\n              name={player.name}\n              score={player.score}\n              id={player.id}\n              key={player.id.toString()}\n              index={index}\n              changeScore={this.handleScoreChange}\n              removePlayer={this.handleRemovePlayer}\n              isHighScore={highScore === player.score}\n            />\n          )}\n          <AddPlayerForm addPlayer={this.handleAddPlayer} />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}